# orig: Michael Case
# desc: Attempt to test Geometry separately from "real" Sim and Reco.

process GeometryTest = {
# empty input service; empty source for now.
# using 2 events just to make sure things work right.
   source = EmptySource
   {
      untracked int32 maxEvents = 2
   }
# Geometry - overkill, used for test/completeness 
#            includes Sim, Digi & Reco files as far
#            as I can tell.
   include "Geometry/CMSCommonData/data/cmsIdealGeometryDB.cfi"

# RPCGeometry test
   include "Geometry/RPCGeometry/data/rpcGeometry.cfi"
   module prpc =  RPCGeometryAnalyzer { }

# DT test
   include "Geometry/DTGeometry/data/dtGeometry.cfi"
   module pdt =  DTGeometryAnalyzer { }

# CSC test
   include "Geometry/CSCGeometry/data/cscGeometry.cfi"
   module pcsc =  CSCGeometryAnalyzer {}

# Tracker test
   include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
   include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
   module ptrak =  TrackerDigiGeometryAnalyzer {}

# Magnetic Field
    include "Geometry/CMSCommonData/test/volumeBasedMagneticFieldDB.cfi"

# Hcal test

# Ecal test
    es_module = EcalBarrelGeometryEP {}
    es_module = EcalPreshowerGeometryEP {}
    es_module = EcalEndcapGeometryEP {}
    es_module = HcalHardcodeGeometryEP {}
    es_module = CaloTowerHardcodeGeometryEP {}
    es_module = CaloGeometryBuilder {}
    module pcalo = CaloGeometryAnalyzer {}

# only need ONE AsciiOutputModule 
    module print = AsciiOutputModule {}

# MessageLogger
  service = MessageLogger {
    untracked vstring destinations = { "detailedInfo"
                                     , "critical"
                                     , "info"
                                     , "warning"
                                     }
    untracked PSet critical     = { untracked string threshold = "ERROR"   }
    untracked PSet detailedInfo = { untracked string threshold = "INFO"    } 
    untracked PSet warning      = { untracked string threshold = "WARNING" }
  }
    path p1 = { prpc, ptrak, pdt, pcsc, pcalo } 
    endpath ep = { print }
}
